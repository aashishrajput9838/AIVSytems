/* Home component optimizations */

/* Reduce motion for users who prefer it */
@media (prefers-reduced-motion: reduce) {
  .homeContainer *,
  .homeContainer *::before,
  .homeContainer *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .featureCard {
    border: 2px solid currentColor !important;
  }
  
  .navigationLink {
    text-decoration: underline !important;
  }
  
  .ctaButton {
    border: 3px solid currentColor !important;
  }
}

/* Focus indicators for better accessibility */
.focusVisible {
  outline: 2px solid #f59e0b !important;
  outline-offset: 2px !important;
}

/* Performance optimizations */
.backgroundGradient {
  will-change: transform;
  transform: translateZ(0);
}

.featureCard {
  will-change: transform;
  transform: translateZ(0);
}

/* Screen reader only content */
.srOnly {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

/* Print styles */
@media print {
  .homeContainer {
    background: white !important;
    color: black !important;
  }
  
  .featureCard {
    break-inside: avoid;
    box-shadow: none !important;
    border: 1px solid #ccc !important;
  }
  
  .navigationLink,
  .ctaButton {
    display: none !important;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .homeContainer {
    color-scheme: dark;
  }
}

/* Large text support */
@media (prefers-reduced-motion: no-preference) {
  .featureCard:hover {
    transform: translateY(-4px) translateZ(0);
  }
}

/* Container queries for responsive design */
@container (min-width: 768px) {
  .featureGrid {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* Optimized animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px) translateZ(0);
  }
  to {
    opacity: 1;
    transform: translateY(0) translateZ(0);
  }
}

.fadeInUp {
  animation: fadeInUp 0.6s ease-out;
}

/* Loading states */
.loading {
  opacity: 0.7;
  pointer-events: none;
}

/* Error states */
.error {
  border-color: #ef4444 !important;
  background-color: #fef2f2 !important;
}

/* Success states */
.success {
  border-color: #10b981 !important;
  background-color: #f0fdf4 !important;
}
